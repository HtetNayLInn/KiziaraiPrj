import style from './company_info.module.css'
import SideMenu from '../../../components/side_menu/side_menu'
import { useRef, useState, useEffect } from 'react'
import { useSupabaseClient ,useUser} from "@supabase/auth-helpers-react";


    /*
     
    住所データ:
    create table
    public.ka_company_profile (
            id bigint generated by default as identity not null,
            created_at timestamp with time zone null default now(),
            company_id bigint null,
            company_name character varying null,
            zip_code character varying null,
            state character varying null,
            city character varying null,
            street character varying null,
            lang_id bigint null,
            constraint ka_company_profile_pkey primary key (id),
            constraint ka_company_profile_company_id_fkey foreign key (company_id) references ka_company (id),
            constraint ka_company_profile_lang_id_fkey foreign key (lang_id) references ka_lang_master (id)
    ) tablespace pg_default;
    
    */

const CompanyInfo = () =>{

    // 国 selectのref
    const countryRef = useRef<HTMLSelectElement>(null);

    const companyNameRef = useRef<HTMLInputElement>(null);
    const postalCodeRef = useRef<HTMLInputElement>(null);

    const addressStateRef = useRef<HTMLInputElement>(null);
    const addressCityRef = useRef<HTMLInputElement>(null);
    const addressStreetRef = useRef<HTMLInputElement>(null);
    const addressBuildingRef = useRef<HTMLInputElement>(null);

    // 画像のフォーム
    const imageRef = useRef<HTMLInputElement>(null);

    // メイン画像のState
    const [mainImage,setMainImage] = useState<File>();
    const [mainImageUrl,setMainImageUrl] = useState<string>();
    const [companyId,setCompanyId] = useState();
    const [langId,setLangId] = useState(1);//1:ja,2:en

    const supabaseClient = useSupabaseClient();
    const user = useUser();

    const registerData = async ()=>{

        if(user){
            // group_idを取得する
            let {data:group_id,error:group_id_error} = await supabaseClient.from('ka_user_profile').select('active_group_id').eq('user_id',user?.id).single();
            if(group_id){
                // console.log('group_id',group_id);
                let lang_id = langId;

                // 国のIDを取得する
                let country_id = countryRef.current?.value;

                let company_name = companyNameRef.current?.value;
                let postal_code = postalCodeRef.current?.value;
                let address_state = addressStateRef.current?.value;
                let address_city = addressCityRef.current?.value;
                let address_street = addressStreetRef.current?.value;
                let address_building = addressBuildingRef.current?.value;

                await upsertToDB({
                    company_id: companyId,
                    company_name: company_name,
                    country_id: country_id,
                    postal_code: postal_code,
                    state: address_state,
                    city: address_city,
                    street: address_street,
                    building: address_building,
                    lang_id: lang_id,
                });
                
                // 画像をstorageのcompany_assetsにアップロードする。ディレクトリは、company_id/にする
                if(mainImage){
                    await uploadImageToStorage(mainImage);
                }
            }
        }
    }

    // 画像のアップロードok
    const uploadImageToStorage = async (file: File)=>{
        const { data, error } = await supabaseClient.storage.from('public_company_assets').upload(`${companyId}/${file.name}`, file);
        if (error) {
            console.log('error', error);
        } else {
            console.log('data', data);
        }
    }

    // 画像をstorageのpublic_company_assetsからcompanyIdで取得する
    const getImageFromStorage = async (companyId: number)=>{
        const { data, error } = await supabaseClient.storage.from('public_company_assets').list(String(companyId));
        if (error) {
            console.log('image error', error);
        } else if (data && data.length > 0){
            console.log('image data', data);
            
            // 画像のsignedURLを取得する
            const { data: signedURL } = supabaseClient.storage.from('public_company_assets').getPublicUrl(`${companyId}/${data[0].name}`);
           if(signedURL && signedURL.publicUrl){
                setMainImageUrl(signedURL.publicUrl);
           }
        }
    }

    const upsertToDB =  async (data : any)=>{

        const {data: register_data, error: register_data_error} = await supabaseClient.from('ka_company_profile').upsert(data).select();

        if(register_data){
            alert('ok');
      
            
        }else{　
            console.log(register_data_error);
            alert('ng');
        }
    }

    const previewData = ()=>{

    }

    // 画像をアップロードする
    const onFileChange = (e: any) => {
        e.preventDefault();
        const file = e.target.files[0];
        const reader = new FileReader();
        reader.onloadend = () => {
            // console.log(reader.result);
            // console.log(file);
            // useStateで画像をセットする
            setMainImage(file);
            console.log(file.name);
            // console.log(file.type);
            // console.log(file.size);
            // console.log(file.lastModified);
        }
        reader.readAsDataURL(file);
    }

    // 会社プロフィールの情報が登録さている場合はデータをrefにセットする
    const getCompanyProfile = async ()=>{
        if(companyId && langId){
            let {data:company_profile,error:company_profile_error} = await supabaseClient.from('ka_company_profile').select().eq('company_id',companyId).eq('lang_id',langId).single();
            if(company_profile){
                console.log('company_profile',company_profile);
                if(companyNameRef.current){
                    companyNameRef.current.value = company_profile.company_name;
                }
                if(countryRef.current){
                    countryRef.current.value = company_profile.country;
                }
                if(postalCodeRef.current){
                    postalCodeRef.current.value = company_profile.postal_code;
                }
                if(addressStateRef.current){
                    addressStateRef.current.value = company_profile.state;
                }
                if(addressCityRef.current){
                    addressCityRef.current.value = company_profile.city;
                }
                if(addressStreetRef.current){
                    addressStreetRef.current.value = company_profile.street;
                }
                if(addressBuildingRef.current){
                    addressBuildingRef.current.value = company_profile.building;
                }
            }else{
                console.log('company_profile_error',company_profile_error);
            }
        }
    }

    useEffect(()=>{
 

    },[]);

    useEffect(()=>{
        (async ()=>{
            // console.log('getCompanyProfile');
            await getCompanyProfile();
        })();
    },[countryRef,companyNameRef,postalCodeRef,addressStateRef,addressCityRef,addressStreetRef,addressBuildingRef])

    useEffect(()=>{
        if(user){

            // 会社IDを取得する
            (async ()=>{

                let {data:user_profile,error:user_profile_error} = await supabaseClient.from('ka_user_profile').select().eq('user_id',user?.id).single();
                if(user_profile){
                    console.log('-- group_id',user_profile.active_group_id);
                    let {data:companies,error:companies_id_error} = await supabaseClient.from('ka_company').select().eq('group_id',user_profile.active_group_id);
                    if(companies && companies.length > 0){
                    let company = companies[0];
                    if(company.id){
                            setCompanyId(company.id);
                        }
                        // 日本語を設定
                        setLangId(1);
                        await getCompanyProfile();
                        await getImageFromStorage(company.id);
                    }
                }
            })();
        }
    },[user]);

    useEffect(()=>{
        (async ()=>{
            console.log('getCompanyProfile');
            await getCompanyProfile();
        })();
    },[companyId,langId]);

    /**
     *  
     *  国番号
       case "Japan":
            return 1;
        case "China":
            return 2;
        case "United States of America":
            return 3;
        case "United Kingdom":
            return 4;
        case "Canada":
            return 5;
        case "Australia":
            return 6;
        case "New Zealand":
            return 7;
     */


    return (<div className={style.all_container}>
        <div className={style.left_container}>
            <SideMenu isBgWhite={true}/>
        </div>
        <div className={style.right_container}>
            {langId == 1 ? 
                <div className={style.form_container}>
                    <div className={`${style.row} ${style.row_single}`}>
                        <div className={style.title_container}>会社登録: {companyId}</div>
                    </div>
                    <div className={style.row}>
                        <div className={style.title_column}>社名</div>
                        <div className={style.content_column}>
                        <input type="text" className={style.input_text} ref={companyNameRef} />
                        </div>
                    </div>

                    <div className={style.row}>
                        <div className={style.title_column}>国</div>
                        <div className={style.content_column}>
                            <select ref={countryRef}>
                                <option value="1">日本</option>
                                <option value="2">アメリカ</option>
                                <option value="3">中国</option>
                                <option value="4">イギリス</option>
                                <option value="5">カナダ</option>
                                <option value="6">オーストラリア</option>
                                <option value="7">ニュージーランド</option>
                            </select>
                        </div>
                    </div>

                    <div className={style.row}>
                        <div className={style.title_column}>郵便番号</div>
                        <div className={style.content_column}>
                            <input type="text" className={style.input_text} ref={postalCodeRef} />
                        </div>
                    </div>

                    <div className={style.row}>
                        <div className={style.title_column}>県</div>
                        <div className={style.content_column}>
                            <input type="text" className={style.input_text}  ref={addressStateRef} />
                        </div>
                    </div>
                    <div className={style.row}>
                        <div className={style.title_column}>市区町村</div>
                        <div className={style.content_column}>
                            <input type="text" className={style.input_text}  ref={addressCityRef} />
                        </div>
                    </div>

                    <div className={style.row}>
                        <div className={style.title_column}>住所1</div>
                        <div className={style.content_column}>
                            <input type="text" className={style.input_text}  ref={addressStreetRef} />
                        </div>
                    </div>

                    <div className={style.row}>
                        <div className={style.title_column}>住所2(建物)</div>
                        <div className={style.content_column}>
                            <input type="text" className={style.input_text}  ref={addressBuildingRef} />
                        </div>
                    </div>

                    {/* 付加情報 */}
                    <div className={style.row}>
                    </div>

                    {/* 画像 */}
                    <div className={style.row}>
                        <img src={mainImageUrl} />
                        <div className={style.title_column}>画像</div>
                        <div className={style.content_column}>
                            <input type="file" accept="image/*" onChange={onFileChange} />
                        </div>
                    </div>

                </div>
            : <></>
            }

            <div className={style.button} onClick={registerData}>register</div>
            <div className={style.button} onClick={previewData}>Preview</div>

        </div>


    </div>)
}

export default CompanyInfo